{% comment %}
	All Products Section with AJAX "Load More"
	- Merchant selects a collection
	- Controls number of products per row
	- Supports dynamic load more (AJAX)
{% endcomment %}

<section
	id="AllProductsSection-{{ section.id }}"
	class="all-products-section"
	data-section-id="{{ section.id }}"
	data-collection-handle="{{ section.settings.collection }}"
	data-products-per-row="{{ section.settings.products_per_row }}"
	data-products-limit="{{ section.settings.products_limit }}"
>
	<div class="page-width">
		{% if section.settings.collection != blank %}
			{% assign collection = collections[section.settings.collection] %}
			{% if collection.products_count > 0 %}
				<div
					id="ProductGrid-{{ section.id }}"
					class="grid grid--{{ section.settings.products_per_row }}-col"
				>
					{% paginate collection.products by section.settings.products_limit %}
						{% for product in collection.products %}
							<div class="grid__item">
								{% render 'product-card', product: product %}
							</div>
						{% endfor %}
					{% endpaginate %}
				</div>

				{% if collection.products_count > section.settings.products_limit %}
					<div class="load-more-wrapper">
						<button
							id="LoadMoreBtn-{{ section.id }}"
							class="load-more-btn"
							data-page="2"
						>
							Load More
						</button>
					</div>
				{% endif %}
			{% else %}
				<p>No products found in this collection.</p>
			{% endif %}
		{% else %}
			<p>Please select a collection in the section settings.</p>
		{% endif %}
	</div>
</section>

<style>
	.grid {
		display: grid;
		gap: 1.5rem;
	}
	.grid--1-col {
		grid-template-columns: repeat(1, 1fr);
	}
	.grid--2-col {
		grid-template-columns: repeat(2, 1fr);
	}
	.grid--3-col {
		grid-template-columns: repeat(3, 1fr);
	}
	.grid--4-col {
		grid-template-columns: repeat(4, 1fr);
	}
	.grid--5-col {
		grid-template-columns: repeat(5, 1fr);
	}

	.load-more-wrapper {
		text-align: center;
		margin-top: 2rem;
	}

	.load-more-btn {
		background: #000;
		color: #fff;
		padding: 0.75rem 1.5rem;
		border: none;
		border-radius: 4px;
		cursor: pointer;
		transition: background 0.2s;
	}

	.load-more-btn:hover {
		background: #333;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const section = document.querySelector('[id^="AllProductsSection-"]')
		if (!section) return

		const btn = section.querySelector('.load-more-btn')
		const grid = section.querySelector('.grid')
		const collectionHandle = section.dataset.collectionHandle
		const limit = parseInt(section.dataset.productsLimit)
		const perRow = section.dataset.productsPerRow
		const sectionId = section.dataset.sectionId

		if (!btn) return

		btn.addEventListener('click', () => {
			const page = parseInt(btn.dataset.page)

			btn.textContent = 'Loading...'
			btn.disabled = true

			fetch(`/?sections=all-products&handle=${collectionHandle}&page=${page}`)
				.then(res => res.text())
				.then(html => {
					// Parse the new product HTML
					const temp = document.createElement('div')
					temp.innerHTML = html

					const newGrid = temp.querySelector(`#AllProductsSection-${sectionId} .grid`)
					if (newGrid) {
						newGrid.querySelectorAll('.grid__item').forEach(item => {
							grid.appendChild(item)
						})

						// Increment page number
						btn.dataset.page = page + 1

						// If no more products, hide button
						if (newGrid.querySelectorAll('.grid__item').length < limit) {
							btn.style.display = 'none'
						} else {
							btn.textContent = 'Load More'
							btn.disabled = false
						}
					}
				})
				.catch(err => {
					console.error(err)
					btn.textContent = 'Error'
				})
		})
	})
</script>

{% schema %}
{
	"name": "All Products (with Load More)",
	"settings": [
		{
			"type": "collection",
			"id": "collection",
			"label": "Select collection",
			"default": ""
		},
		{
			"type": "range",
			"id": "products_per_row",
			"label": "Products per row",
			"min": 1,
			"max": 5,
			"step": 1,
			"default": 3
		},
		{
			"type": "range",
			"id": "products_limit",
			"label": "Products per page (load batch size)",
			"min": 3,
			"max": 24,
			"step": 3,
			"default": 9
		}
	],
	"presets": [
		{
			"name": "All Products Grid (Load More)",
			"category": "Products"
		}
	]
}
{% endschema %}
